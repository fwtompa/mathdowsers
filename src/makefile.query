# makefile to run queries and eval for ARQMath-3.  To run things in parallel run: make -j #

all_query: query

include makefile.base

S = -s23
alpha = 18
alpha2 = 40
loc = 8
IY = 2024

# ------------------ SELECT ------------------
stopwords $(DP)/stopwords.txt: $(SW)/snowball_original.txt $(SW)/nltk.txt
	printf "#(start)#\n#(end)#\ntext\namp\nalign\nst\nna\nca\n" \
		| cat - $(SW)/snowball_original.txt $(SW)/nltk.txt | tr -d "\015" \
		| sort -u | grep -v "^$$" > $(DP)/stopwords.txt

keepwords $(DP)/keepwords.txt: $(DP)/QPosts.tsv.gz $(DP)/stopwords.txt
	#<p class="index"><a href="e/exclusive.htm" target="_self" class="index">Exclusive (interval)</a>
	#<p class="index"><a href="g/greek_alphabet.htm" class="index">Gamma <font face="Times New Roman, Times, serif">(&Gamma; &gamma;)</font></a>
	wget -O - -q http://www.mathwords.com/a_to_z.htm  \
		| sed "/class=.index./!d;s/^.*class=.index.>//;s/ *<.*//;s/(//g;s/)//g" \
		| tr "\222\347\364\366 [:upper:]" "'coo\012[:lower:]" \
		| sort -u > mathdict_words.txt
	#<a href="http://planetmath.org/TopicsOnCalculus">TopicsOnCalculus</a>
	wget -O - -q https://planetmath.org/msc.html  \
		| grep "http:..planetmath.org" | sed "s/<.a>//;s/^.*>//;s/[A-Z]/ &/g;s/[0-9]/ /g" \
		| tr " [:upper:]" "\012[:lower:]" \
		| sort -u > planetmath_words.txt
	# <span>elementary-set-theory</span>, <span>intuition</span>, <span>infinity</span>, <span>faq</span>
	gunzip -c $(DP)/QPosts.tsv.gz | sed "s/^.*	//;s/<\/?span>//g;s/,//g;s/-/ /g" \
		| tr " " "\012" | sort -u > MSEtag_words.txt
	cat MSEtag_words.txt mathdict_words.txt planetmath_words.txt | sort -u | grep -v "^$$" | grep -v "[^a-z]" \
		| diff - $(DP)/stopwords.txt | grep "<" | sed "s/< *//" > $(DP)/keepwords.txt
	rm MSEtag_words.txt mathdict_words.txt planetmath_words.txt

# ------------------ QUERY ------------------
topics: $(DP)/topics-task1$S-2020.txt $(DP)/topics-task1$S-2021.txt $(DP)/topics-task1$S-2022.txt \
	$(DP)/topics-task2$S-2020.txt $(DP)/topics-task2$S-2021.txt $(DP)/topics-task2$S-2022.txt

$(DP)/topics-task1$S-2020.txt: $(DO)/Formula_topics_latex_V2.0.tsv $(DO)/Formula_topics_slt_V2.0.tsv $(DO)/Topics_V2.0.xml tasks.awk \
	task2.awk $(DO)/Topics_V1.1.xml
	cat $(DO)/Formula_topics_latex_V2.0.tsv <(echo "\n") $(DO)/Formula_topics_slt_V2.0.tsv $(DO)/Topics_V2.0.xml \
		| tr -d "\r" | awk -f tasks.awk \
		| python3 $(MT)/mathtuples/convert.py --context \
		| sed "s/<[^>]*>/ /g;s/&[^;]*;/ /g;s/  */ /g" \
		> $(DP)/topics-task1$S-2020.txt
	cat $(DO)/Topics_V1.1.xml | awk -f task2.awk \
		| python3 $(MT)/mathtuples/convert.py --context \
		> $(DP)/topics-task2$S-2020.txt
	rm forms

$(DP)/topics-task1$S-2021.txt: $(DO)/Topics_2021_Formulas_Latex_V1.1.tsv $(DO)/Topics_2021_Formulas_SLT_V1.1.tsv $(DO)/Topics_Task1_2021_V1.1.xml tasks.awk \
	$(DO)/Topics_Task2_2021_V1.1.xml task2.awk
	cat $(DO)/Topics_2021_Formulas_Latex_V1.1.tsv $(DO)/Topics_2021_Formulas_SLT_V1.1.tsv $(DO)/Topics_Task1_2021_V1.1.xml \
		| tr -d "\r" | awk -f tasks.awk \
		| python3 $(MT)/mathtuples/convert.py --context \
		| sed "s/<[^>]*>/ /g;s/&[^;]*;/ /g;s/  */ /g" \
		> $(DP)/topics-task1$S-2021.txt
	cat $(DO)/Topics_Task2_2021_V1.1.xml | awk -f task2.awk \
		| python3 $(MT)/mathtuples/convert.py --context \
		> $(DP)/topics-task2$S-2021.txt
	rm forms

$(DP)/topics-task1$S-2022.txt: $(DO)/Topics_Formulas_Latex.V0.1.tsv $(DO)/Topics_Formulas_SLT.V0.1.tsv $(DO)/Topics_Task1_2022_V0.1.xml tasks.awk \
	$(DO)/Topics_Task2_2022_V0.1.xml task2.awk
	cat $(DO)/Topics_Formulas_Latex.V0.1.tsv $(DO)/Topics_Formulas_SLT.V0.1.tsv $(DO)/Topics_Task1_2022_V0.1.xml \
		| tr -d "\r" | awk -f tasks.awk \
		| python3 $(MT)/mathtuples/convert.py --context \
		| sed "s/<[^>]*>/ /g;s/&[^;]*;/ /g;s/  */ /g" \
		> $(DP)/topics-task1$S-2022.txt
	cat $(DO)/Topics_Task2_2022_V0.1.xml | awk -f task2.awk \
		| python3 $(MT)/mathtuples/convert.py --context \
		> $(DP)/topics-task2$S-2022.txt
	rm forms

$(DP)/topics-task2$S-2020.txt: $(DP)/topics-task1$S-2020.txt

$(DP)/topics-task2$S-2021.txt: $(DP)/topics-task1$S-2021.txt

$(DP)/topics-task2$S-2022.txt: $(DP)/topics-task1$S-2022.txt

$(DP)/judged-query-names.txt: $(DO)/qrel_*
	cat $(DO)/qrel_* | awk '{print $$1}' | sort -u > $(DP)/judged-query-names.txt

# ------------------ TASK 1 ------------------
$(DR)/trec-task1$S-all.tsv: $(DP)/topics-task1$S-2020.txt $(DP)/topics-task1$S-2021.txt $(DP)/topics-task1$S-2022.txt \
    $(DP)/judged-query-names.txt $(DI)/task1_$(IY)_L$(loc).mindex.meta $(MS) $(MS)/msearch.exe $(MS)/mtokenize.exe \
    $(DP)/keepwords.txt $(DP)/stopwords.txt
	time cat $(DP)/topics-task1$S-*.txt \
		| awk -F';' 'FNR==NR{a[$$1];next} $$1 in a' $(DP)/judged-query-names.txt - \
		| $(MS)/mtokenize.exe -q -M -T $(DP)/keepwords.txt -S $(DP)/stopwords.txt \
		| $(MS)/msearch.exe -k1000 -M -a0.$(alpha) $(DI)/task1_$(IY)_L$(loc).mindex \
		| awk 'BEGIN{OFS="\t"} {split($$2,a,"_"); $$2=a[3]; print $$0"\tL$(loc)_a0$(alpha)"}' \
		| awk 'BEGIN{OFS="\t"} {$$2="Q0\t"$$2; print}' \
		> $(DR)/trec-task1$S-all.tsv

query-task1: $(DR)/trec-task1$S-all.tsv

# ------------------ TASK 2 ------------------
$(DR)/task2$S-all-latex_L$(loc)_a0$(alpha2).tsv: $(DP)/topics-task2$S-2020.txt $(DP)/topics-task2$S-2021.txt $(DP)/topics-task2$S-2022.txt \
   $(DI)/task2_$(IY)_latex_L$(loc).mindex.meta latex_filter_stopwords.py \
   $(DP)/stopwords.txt $(DP)/judged-query-names.txt $(MS)/mtokenize.exe $(MS)/msearch.exe
	time cat $(DP)/topics-task2$S-*.txt \
		| python3 latex_filter_stopwords.py -tsv inline \
		| awk -F';' 'FNR==NR{a[$$1];next} $$1 in a' $(DP)/judged-query-names.txt - \
		| $(MS)/mtokenize.exe -q -M -S $(DP)/stopwords.txt \
		| $(MS)/msearch.exe -k1000 -M -a0.$(alpha2) $(DI)/task2_$(IY)_latex_L$(loc).mindex \
		| awk 'BEGIN{OFS="\t"} {split($$2,a,"_"); $$2=a[1]"\t"a[2]; print $$0"\tlatex_L$(loc)_a0$(alpha2)"}' \
		> $(DR)/task2$S-all-latex_L$(loc)_a0$(alpha2).tsv

$(DR)/trec-task2$S-all-%.tsv: $(DR)/task2$S-all-%.tsv dedup_task2.py
	python3 dedup_task2.py -qre <( cat $(DO)/qrel_task2_*.tsv ) -tsv $(DO)/latex_representation_v3/ $(DR)/task2$S-all-*.tsv

.PRECIOUS: $(DR)/task2$S-all-L$(loc)_a0$(alpha2).tsv $(DR)/trec-task2$S-all-%.tsv

query-task2: $(DR)/trec-task2$S-all-latex_L$(loc)_a0$(alpha2).tsv

# ------------------ EVAL ------------------
$(TE)/trec_eval:
	if [[ `uname -s` =~ CYGWIN ]] ; then  \
		mv $(TE)/sysfunc.h . ; \
		sed "s/<sys\/stat.h>/&\r\n#undef log2/"< sysfunc.h >$(TE)/sysfunc.h ; fi
	$(MAKE) -C $(TE)
	rm sysfunc.h

.PRECIOUS: $(TE)/trec_eval

eval-task1-%: query-task1 $(TE)/trec_eval
	echo task1 2020, 2021, 2022, alpha=0.$(alpha), loc=$(loc); \
	$(TE)/trec_eval -l2 -m num_q -m ndcg -m P.10 -m map -J $(DO)/qrel_official_task1 $(DR)/trec-task1$S-all.tsv; \
	$(TE)/trec_eval -l2 -m num_q -m ndcg -m P.10 -m map -J $(DO)/qrel_task1_2021_test.tsv $(DR)/trec-task1$S-all.tsv; \
	$(TE)/trec_eval -l2 -m num_q -m ndcg -m P.10 -m map -J $(DO)/qrel_task1_2022_official.tsv $(DR)/trec-task1$S-all.tsv

eval-task2-%: query-task2 $(TE)/trec_eval
	echo task2 2020, 2021, 2022; \
	$(TE)/trec_eval -l2 -m num_q -m ndcg -m P.10 -m map -J $(DO)/qrel_task2_all.tsv $(DR)/trec-task2$S-all-$(*).tsv; \
	$(TE)/trec_eval -l2 -m num_q -m ndcg -m P.10 -m map -J $(DO)/qrel_task2_2021_test_official_evaluation.tsv $(DR)/trec-task2$S-all-$(*).tsv; \
	$(TE)/trec_eval -l2 -m num_q -m ndcg -m P.10 -m map -J $(DO)/qrel_task2_2022_official.tsv $(DR)/trec-task2$S-all-$(*).tsv

eval-task1: eval-task1-L$(loc)

eval-task2: eval-task2-latex_L$(loc)_a0$(alpha2)

query: eval-task1 eval-task2

