# makefile to run queries and eval for ARQMath-3.  To run things in parallel run: make -j #

main-task: eval-task1

all_query: query

include makefile.base

trees = SO
S = -s25-$(trees)
alpha = 10
alpha2 = 40
loc = 8
IY = 2025

# ------------------ SELECT ------------------
$(DR): | $(DD)
	@echo "***** creating directory $(DR)"
	mkdir $(DR)

$(DP)/stopwords.txt: $(SW)/snowball_original.txt $(SW)/nltk.txt | $(DP)
	printf "#(start)#\n#(end)#\ntext\namp\nalign\nst\nna\nca\n" \
		| cat - $(SW)/snowball_original.txt $(SW)/nltk.txt | tr -d "\015" \
		| sort -u | grep -v "^$$" > $(DP)/stopwords.txt

$(DP)/keepwords.txt: $(DP)/QPosts.tsv.gz $(DP)/stopwords.txt
	#<p class="index"><a href="e/exclusive.htm" target="_self" class="index">Exclusive (interval)</a>
	#<p class="index"><a href="g/greek_alphabet.htm" class="index">Gamma <font face="Times New Roman, Times, serif">(&Gamma; &gamma;)</font></a>
	curl http://www.mathwords.com/a_to_z.htm  \
		| sed "/class=.index./!d;s/^.*class=.index.>//;s/ *<.*//;s/(//g;s/)//g" \
		| tr "\222\347\364\366 [:upper:]" "'coo\012[:lower:]" \
		| sort -u > mathdict_words.txt
	#<a href="http://planetmath.org/TopicsOnCalculus">TopicsOnCalculus</a>
	curl https://planetmath.org/msc.html  \
		| grep "http:..planetmath.org" | sed "s/<.a>//;s/^.*>//;s/[A-Z]/ &/g;s/[0-9]/ /g" \
		| tr " [:upper:]" "\012[:lower:]" \
		| sort -u > planetmath_words.txt
	# <span>elementary-set-theory</span>, <span>intuition</span>, <span>infinity</span>, <span>faq</span>
	gunzip -c $(DP)/QPosts.tsv.gz | sed "s/^.*	//;s/<\/?span>//g;s/,//g;s/-/ /g" \
		| tr " " "\012" | sort -u > MSEtag_words.txt
	cat MSEtag_words.txt mathdict_words.txt planetmath_words.txt | sort -u | grep -v "^$$" | grep -v "[^a-z]" \
		| diff - $(DP)/stopwords.txt | grep "<" | sed "s/< *//" > $(DP)/keepwords.txt
	rm MSEtag_words.txt mathdict_words.txt planetmath_words.txt

stopwords-mathstem.txt: stopwords.txt keywords.txt unicode2ascii.py
	comm -23 <( cat /usr/share/dict/words | $(MS)/mtokenize.exe | sort -u ) <( cat keywords.txt | python3 unicode2ascii.py -c | $(MS)/mtokenize.exe | sort -u ) \
	| cat - <( cat stopwords.txt | $(MS)/mtokenize.exe -M ) | sort -u \
	> stopwords-mathstem.txt

# ------------------ QUERY ------------------
topics: $(DP)/topics-task1$S-2020.txt $(DP)/topics-task1$S-2021.txt $(DP)/topics-task1$S-2022.txt
	# $(DP)/topics-task2$S-2020.txt $(DP)/topics-task2$S-2021.txt $(DP)/topics-task2$S-2022.txt

$(DP)/formulas-20.tsv: $(DO)/Formula_topics_latex_V2.0.tsv $(DO)/Formula_topics_slt_V2.0.tsv $(DO)/Formula_topics_opt_V2.0.tsv \
	formulas.awk $(MT)/mathtuples/convert.py | $(DP) mathtuples
	cat $(DO)/Formula_topics_latex_V2.0.tsv <(echo "\n") | sed '1d;s/\r//gi;s/  *$$//;s/\$$//g;s/&amp;/\&/g;s/&gt;/>/g;s/&lt;/</g' | sort | cut -f 1,5 >t 
	cat $(DO)/Formula_topics_slt_V2.0.tsv | sed '1d;s/\r//g' | awk -f formulas.awk \
		| python3 -m mathtuples.convert --context  | sort | join -t '	' t - > t2
	cat $(DO)/Formula_topics_opt_V2.0.tsv | sed '1d;s/\r//g' | awk -f formulas.awk \
		 | python3 -m mathtuples.convert --context | sort | join -t '	' t2 - > $(DP)/formulas-20.tsv
	rm t t2
	# formula table:  fid, latex, slt, opt ordered lexicographically

$(DP)/formulas-21.tsv: $(DO)/Topics_2021_Formulas_Latex_V1.1.tsv $(DO)/Topics_2021_Formulas_SLT_V1.1.tsv $(DO)/Topics_2021_Formulas_OPT_V1.1.tsv \
	formulas.awk $(MT)/mathtuples/convert.py | $(DP) mathtuples
	cat $(DO)/Topics_2021_Formulas_Latex_V1.1.tsv <(echo "\n") | sed '1d;s/\r//gi;s/  *$$//;s/\$$//g;s/&amp;/\&/g;s/&gt;/>/g;s/&lt;/</g' | sort | cut -f 1,5 >t 
	cat $(DO)/Topics_2021_Formulas_SLT_V1.1.tsv | sed '1d;s/\r//g' | awk -f formulas.awk \
		| python3 -m mathtuples.convert --context  | sort | join -t '	' t - > t2
	cat $(DO)/Topics_2021_Formulas_OPT_V1.1.tsv | sed '1d;s/\r//g' | awk -f formulas.awk \
		 | python3 -m mathtuples.convert --context -O -I  | sort | join -t '	' t2 - > $(DP)/formulas-21.tsv
	rm t t2
	# formula table:  fid, latex, slt, opt ordered lexicographically


$(DP)/formulas-22.tsv: $(DO)/Topics_Formulas_Latex.V0.1.tsv $(DO)/Topics_Formulas_SLT.V0.1.tsv $(DO)/Topics_Formulas_OPT.V0.1.tsv \
	formulas.awk $(MT)/mathtuples/convert.py | $(DP) mathtuples
	cat $(DO)/Topics_Formulas_Latex.V0.1.tsv <(echo "\n") | sed '1d;s/\r//gi;s/  *$$//;s/\$$//g;s/&amp;/\&/g;s/&gt;/>/g;s/&lt;/</g' | sort | cut -f 1,5 >t 
	cat $(DO)/Topics_Formulas_SLT.V0.1.tsv | sed '1d;s/\r//g' | awk -f formulas.awk \
		| python3 -m mathtuples.convert --context  | sort | join -t '	' t - > t2
	cat $(DO)/Topics_Formulas_OPT.V0.1.tsv | sed '1d;s/\r//g' | awk -f formulas.awk \
		 | python3 -m mathtuples.convert --context -O -I  | sort | join -t '	' t2 - > $(DP)/formulas-22.tsv
	rm t t2
	# formula table:  fid, latex, slt, opt ordered lexicographically

$(DP)/topics-task1$S-2020.txt: $(DP)/formulas-20.tsv  $(DO)/Topics_V2.0.xml task1.awk
	cat $(DP)/formulas-20.tsv  $(DO)/Topics_V2.0.xml  \
		| tr -d "\r" | awk -f task1.awk trees=$(trees) \
		| sed "s/<[^>]*>/ /g;s/&[^;]*;/ /g;s/  */ /g" \
		> $(DP)/topics-task1$S-2020.txt

$(DP)/topics-task1$S-2021.txt: $(DP)/formulas-21.tsv  $(DO)/Topics_Task1_2021_V1.1.xml task1.awk
	cat $(DP)/formulas-21.tsv  $(DO)/Topics_Task1_2021_V1.1.xml  \
		| tr -d "\r" | awk -f task1.awk trees=$(trees) \
		| sed "s/<[^>]*>/ /g;s/&[^;]*;/ /g;s/  */ /g" \
		> $(DP)/topics-task1$S-2021.txt

$(DP)/topics-task1$S-2022.txt: $(DP)/formulas-22.tsv  $(DO)/Topics_Task1_2022_V0.1.xml task1.awk
	cat $(DP)/formulas-22.tsv  $(DO)/Topics_Task1_2022_V0.1.xml  \
		| tr -d "\r" | awk -f task1.awk trees=$(trees) \
		| sed "s/<[^>]*>/ /g;s/&[^;]*;/ /g;s/  */ /g" \
		> $(DP)/topics-task1$S-2022.txt

$(DP)/topics-task2$S-2020.txt: $(DO)/Formula_topics_latex_V2.0.tsv $(DO)/Formula_topics_slt_V2.0.tsv $(DO)/Topics_V2.0.xml task1.awk \
	$(DO)/Topics_V1.1.xml task2.awk $(MT)/mathtuples/convert.py | $(DP)
	cat $(DO)/Topics_V1.1.xml | awk -f task2.awk \
		| python3 latex_filter_stopwords.py -tsv inline \
		| python3 $(MT)/mathtuples/convert.py $(trees) --context \
		> $(DP)/topics-task2$S-2020.txt
	rm forms

$(DP)/topics-task2$S-2021.txt: $(DO)/Topics_2021_Formulas_Latex_V1.1.tsv $(DO)/Topics_2021_Formulas_SLT_V1.1.tsv $(DO)/Topics_Task1_2021_V1.1.xml task1.awk \
	$(DO)/Topics_Task2_2021_V1.1.xml task2.awk $(MT)/mathtuples/convert.py | $(DP)
	cat $(DO)/Topics_Task2_2021_V1.1.xml | awk -f task2.awk \
		| python3 latex_filter_stopwords.py -tsv inline \
		| python3 $(MT)/mathtuples/convert.py $(trees) --context \
		> $(DP)/topics-task2$S-2021.txt
	rm forms

$(DP)/topics-task2$S-2022.txt: $(DO)/Topics_Formulas_Latex.V0.1.tsv $(DO)/Topics_Formulas_SLT.V0.1.tsv $(DO)/Topics_Task1_2022.V0.1.xml task1.awk \
	$(DO)/Topics_Task2_2022_V0.1.xml task2.awk $(MT)/mathtuples/convert.py | $(DP)
	cat $(DO)/Topics_Task2_2022_V0.1.xml | awk -f task2.awk \
		| python3 latex_filter_stopwords.py -tsv inline \
		| python3 $(MT)/mathtuples/convert.py $(trees) --context \
		> $(DP)/topics-task2$S-2022.txt
	rm forms

$(DP)/judged-query-names.txt: $(DO)/qrel_* | $(DP)
	cat $(DO)/qrel_* | awk '{print $$1}' | sort -u > $(DP)/judged-query-names.txt

# ------------------ TASK 1 ------------------
$(DR)/trec-task1$S-all.tsv: topics \
    $(DP)/judged-query-names.txt $(DI)/task1_$(IY)_L$(loc).mindex.meta $(MS) $(MS)/msearch.exe $(MS)/mtokenize.exe \
    $(DP)/keepwords.txt $(DP)/stopwords.txt $(DP)/keepwords.txt unicode2ascii.py | $(DR)
	time cat $(DP)/topics-task1$S-*.txt \
		| awk -F';' 'FNR==NR{a[$$1];next} $$1 in a' $(DP)/judged-query-names.txt - \
		| python3 unicode2ascii.py -c \
		| $(MS)/mtokenize.exe -q -M -S $(DP)/stopwords.txt -T $(DP)/keepwords.txt \
		| $(MS)/msearch.exe -k1000 -M -a0.$(alpha) $(DI)/task1_$(IY)_L$(loc).mindex \
		| awk 'BEGIN{OFS="\t"} {split($$2,a,"_"); $$2=a[3]; print $$0"\tL$(loc)_a0$(alpha)"}' \
		| awk 'BEGIN{OFS="\t"} {$$2="Q0\t"$$2; print}' \
		> $(DR)/trec-task1$S-all.tsv

query-task1: $(DR)/trec-task1$S-all.tsv

# ------------------ TASK 2 ------------------
$(DR)/trec-task2$S-all-latex_L$(loc)_a0$(alpha2).tsv: $(DP)/topics-task2$S-2020.txt $(DP)/topics-task2$S-2021.txt $(DP)/topics-task2$S-2022.txt \
   $(DI)/task2_$(IY)_latex_L$(loc).mindex.meta latex_filter_stopwords.py \
   $(DP)/stopwords.txt $(DP)/judged-query-names.txt $(MS)/mtokenize.exe $(MS)/msearch.exe unicode2ascii.py | $(DR)
	time cat $(DP)/topics-task2$S-*.txt \
		| awk -F';' 'FNR==NR{a[$$1];next} $$1 in a' $(DP)/judged-query-names.txt - \
		| python3 unicode2ascii.py -c \
		| $(MS)/mtokenize.exe -q -M -S $(DP)/stopwords.txt \
		| $(MS)/msearch.exe -k1000 -M -a0.$(alpha2) $(DI)/task2_$(IY)_latex_L$(loc).mindex \
		| awk 'BEGIN{OFS="\t"} {split($$2,a,"_"); $$2="Q0\t"a[3]; print $$0"\tlatex_L$(loc)_a0$(alpha2)"}' \
		> $(DR)/trec-task2$S-all-latex_L$(loc)_a0$(alpha2).tsv

.PRECIOUS: $(DR)/trec-task2$S-all-%.tsv

query-task2: $(DR)/trec-task2$S-all-latex_L$(loc)_a0$(alpha2).tsv

# ------------------ EVAL ------------------
$(TE)/trec_eval:
	if [[ `uname -s` =~ CYGWIN ]] ; then  \
		mv $(TE)/sysfunc.h . ; \
		sed "s/<sys\/stat.h>/&\r\n#undef log2/"< sysfunc.h >$(TE)/sysfunc.h
		rm sysfunc.h ; fi
	$(MAKE) -C $(TE)

.PRECIOUS: $(TE)/trec_eval

eval-task1-%: $(DR)/trec-task1$S-all.tsv $(TE)/trec_eval
	echo task1 2020, 2021, 2022, alpha=0.$(alpha), loc=$(loc), trees=$(trees) >> $(DR)/trec-task1-scores.txt ; \
	$(TE)/trec_eval -q -l2 -m num_q -m ndcg -m P.10 -m map -J $(DO)/qrel_official_task1 $(DR)/trec-task1$S-all.tsv >> $(DR)/trec-task1-scores.txt  ; \
	$(TE)/trec_eval -q  -l2 -m num_q -m ndcg -m P.10 -m map -J $(DO)/qrel_task1_2021_test.tsv $(DR)/trec-task1$S-all.tsv >> $(DR)/trec-task1-scores.txt  ; \
	$(TE)/trec_eval -q -l2 -m num_q -m ndcg -m P.10 -m map -J $(DO)/qrel_task1_2022_official.tsv $(DR)/trec-task1$S-all.tsv >> $(DR)/trec-task1-scores.txt ; \
	grep all $(DR)/trec-task1-scores.txt 

eval-task2-%: query-task2 $(TE)/trec_eval
	echo task2 2020, 2021, 2022; \
	$(TE)/trec_eval -l2 -m num_q -m ndcg -m P.10 -m map -J $(DO)/qrel_task2_all.tsv $(DR)/trec-task2$S-all-$(*).tsv; \
	$(TE)/trec_eval -l2 -m num_q -m ndcg -m P.10 -m map -J $(DO)/qrel_task2_2021_test_official_evaluation.tsv $(DR)/trec-task2$S-all-$(*).tsv; \
	$(TE)/trec_eval -l2 -m num_q -m ndcg -m P.10 -m map -J $(DO)/qrel_task2_2022_official.tsv $(DR)/trec-task2$S-all-$(*).tsv

eval-task1: eval-task1-L$(loc)

eval-task2: eval-task2-latex_L$(loc)_a0$(alpha2)

query: eval-task1 eval-task2

# ------------------ SMALL INDEX ------------------
$(DP)/task1small_DOCNOs.txt: $(DP)/topics-task1$S-2020.txt $(DP)/topics-task1$S-2021.txt $(DP)/topics-task1$S-2022.txt \
    $(DP)/judged-query-names.txt $(DI)/task1_$(IY)_L$(loc).mindex.meta \
    stopwords-mathstem.txt unicode2ascii.py | $(DR)
	cat $(DP)/topics-task1$S-*.txt \
		| awk -F';' 'FNR==NR{a[$$1];next} $$1 in a' $(DP)/judged-query-names.txt - \
		| python3 unicode2ascii.py -c \
		| $(MS)/mtokenize.exe -q -M -s stopwords-mathstem.txt \
		| $(MS)/msearch.exe -k1200 -M -a0.$(alpha) $(DI)/task1_$(IY)_L$(loc).mindex \
		| awk 'BEGIN{OFS="\t"} {print $$2}' \
		| sort -u > $(DP)/task1small_DOCNOs.txt

$(DP)/task1small_data.xml.gz: $(DP)/task1small_DOCNOs.txt $(MS)/util_mextract.exe
	gunzip -c $(DP)/task1_2024_L8_*.xml.gz | $(MS)/util_mextract.exe $(DP)/task1small_DOCNOs.txt | gzip -c > $(DP)/task1small_data.xml.gz

$(DI)/task1small.mindex: $(DP)/task1small_data.xml.gz $(MS)/mtokenize.exe $(MS)/minvert.exe
	gunzip -c $(DP)/task1small_data.xml.gz \
		| sed 's/#!T!#//;s/#!Q!#//;s/#!A!#//;s/#!X!#//' \
		| $(MS)/mtokenize.exe -M | $(MS)/minvert.exe > $(DI)/task1small.mindex

$(DI)/task1small.mindex.meta: $(DI)/task1small.mindex $(MS)/mencode.exe
	$(MS)/mencode.exe $(DI)/task1small.mindex

$(DR)/trec-task1small-all.tsv: $(DP)/topics-task1$S-2020.txt $(DP)/topics-task1$S-2021.txt $(DP)/topics-task1$S-2022.txt \
    $(DP)/judged-query-names.txt $(DI)/task1small.mindex.meta $(MS)/msearch.exe $(MS)/mtokenize.exe \
    stopwords-mathstem.txt unicode2ascii.py | $(DR)
	time cat $(DP)/topics-task1$S-*.txt \
		| awk -F';' 'FNR==NR{a[$$1];next} $$1 in a' $(DP)/judged-query-names.txt - \
		| python3 unicode2ascii.py -c \
		| $(MS)/mtokenize.exe -q -M -s stopwords-mathstem.txt \
		| $(MS)/msearch.exe -k1000 -M -a0.$(alpha) $(DI)/task1small.mindex \
		| awk 'BEGIN{OFS="\t"} {split($$2,a,"_"); $$2=a[3]; print $$0"\tL$(loc)_a0$(alpha)"}' \
		| awk 'BEGIN{OFS="\t"} {$$2="Q0\t"$$2; print}' \
		> $(DR)/trec-task1small-all.tsv

eval-task1small: $(DR)/trec-task1small-all.tsv $(TE)/trec_eval
	echo task1small 2020, 2021, 2022, alpha=0.$(alpha), loc=$(loc); \
	$(TE)/trec_eval -l2 -m num_q -m ndcg -m P.10 -m map -J $(DO)/qrel_official_task1 $(DR)/trec-task1small-all.tsv; \
	$(TE)/trec_eval -l2 -m num_q -m ndcg -m P.10 -m map -J $(DO)/qrel_task1_2021_test.tsv $(DR)/trec-task1small-all.tsv; \
	$(TE)/trec_eval -l2 -m num_q -m ndcg -m P.10 -m map -J $(DO)/qrel_task1_2022_official.tsv $(DR)/trec-task1small-all.tsv

PL = visualize
D1 = keywords
D2 = keepwords
qrel = qrel_task1_2022_official

anal-2022: $(DO)/$(qrel).tsv scores.awk $(DR)/scores-$(D1).txt $(DR)/task1-$(D1).tsv $(DR)/scores-$(D2).txt $(DR)/task1-$(D2).tsv
	echo "run	topic	ndcg	map	p10" > head
	awk -f scores.awk <$(DR)/scores-$(D1).txt | sed "1,/A.300/d;/all/d;s/^/$(D1)	/" | cat head - >$(PL)/scores.tsv
	awk -f scores.awk <$(DR)/scores-$(D2).txt | sed "1,/A.300/d;/all/d;s/^/$(D2)	/"  >>$(PL)/scores.tsv
	echo "run	topic	aid	pos	rel	bm25" > head
	cut -f 1,3,4 <$(DO)/$(qrel).tsv | sed "s/	/ /;s/\r//g" | sort > qrel.tsv
	cut -f 1,3,4,5 <$(DR)/task1-$(D1).tsv | sed "s/	/ /" | sort | join -t "	" -o 1.1,2.2,1.2,2.3 qrel.tsv - | sed "s/ /	/;s/^/$(D1)	/" | sort -t "	" -k 2,2 -k 4,4n | cat head - >$(PL)/runs.tsv
	cut -f 1,3,4,5 <$(DR)/task1-$(D2).tsv | sed "s/	/ /" | sort | join -t "	" -o 1.1,2.2,1.2,2.3 qrel.tsv - | sed "s/ /	/;s/^/$(D2)	/" | sort -t "	" -k 2,2 -k 4,4n >>$(PL)/runs.tsv
	cut -f 2,3,5 $(PL)/runs.tsv | sort -u | comm -23 qrel.tsv - | sort -k 1,1 -k3,3nr | awk -f unfound.awk >$(PL)/unfound.tsv
	rm head qrel.tsv
