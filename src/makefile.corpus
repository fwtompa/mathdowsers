# makefile to create the corpus of HTML documents to be indexed

# Platform-specific check for GNU sed (gsed) for macOS compatibility
SED := sed
ifeq ($(shell uname -s), Darwin)
GSED := $(shell which gsed)
ifneq ($(GSED),)
SED := $(GSED)
$(info >>> Using GNU sed (gsed) on macOS at $(GSED))
else
$(warning >>> WARNING: GNU sed (gsed) not found on macOS. The script will likely fail.)
$(warning >>> Please install it with 'sudo port install gsed' or 'brew install gnu-sed'.)
endif
endif

all_corpus:  corpus-task1

include makefile.base

CY = 2025

R = representation_v3
FORMULAS = $(DO)
SLTS = $(FORMULAS)/slt_$(R)
LATEX = $(FORMULAS)/latex_$(R)
OPTS = $(FORMULAS)/opt_$(R)

V = V1.3
COLLECTION = $(DO)
POSTS = $(COLLECTION)/Posts.$V.xml.gz
LINKS = $(COLLECTION)/PostLinks.$V.xml.gz
COMMENTS = $(COLLECTION)/Comments.$V.xml.gz
OLDCOMMENTS = $(COLLECTION)/Comments.V1.0.xml.gz

F = .tsv.gz
 
# ------------------ PREPRO ------------------
# To preserve the header and work with the rest: command | (read -r; printf "%s\n" "$REPLY"; sort)

$(DP)/AN: $(LATEX) $(SLTS) $(OPTS) slts.awk opts.sed latex.sed $(MT)/mathtuples/convert.py | $(DP) mathtuples
	# input format: id post_id thread_id type comment_id old_visual_id visual_id issue formula, sorted numerically by id
	for f in $(LATEX)/*.tsv; do \
	  echo $$(basename $$f) ; \
	  cat $$f | $(SED) '1d;s/\r//g' | $(SED) -f latex.sed | tr -d '\n' | tr '\a' '\n' | cut -f 1,7,9 | sort >l2s1 ; \
	  cat $(SLTS)/$$(basename $$f) \
	  	| $(SED) '1d;s/\r//g' | awk -f slts.awk | sort | join -t '	' -o 1.1,1.2,1.3,2.7 l2s1 - > l2s2 ; \
	  cat $(OPTS)/$$(basename $$f) \
	  	| $(SED) '1d;s/\r//g' | $(SED) -f opts.sed | cut -f 1,9 | sort | join -t '	' -o 1.3,1.2,1.4,2.2  l2s2 - \
		| sort -u -t "	" \
		| $(SED) "s/<\/math>	<math/<\/math>	<omath/"  \
		| python -m mathtuples.convert --context  \
		| $(SED) "s/<omath/<math/" \
		| python -m mathtuples.convert --context --ignore-slt --opt \
		| python save_formulas.py -A $(DP)/AN -N $(DP)/NAN ; \
	  done
	rm l2s?
	# AN and NAN tables:  latex -> [vid, slt, opt]
	# took 65 hours to create january 2025, try changing to > 20 files instead (using hash?)

mathtuples: 
	ln -s $(MT)/mathtuples mathtuples

$(DP): | $(DD)
	@echo "***** creating directory $(DP)"
	mkdir $(DP)

$(DP)/APosts$F: $(DP)/QPosts$F
	# APosts table: Qid Year Aid Body, sorted numerically by Year, Qid, Aid

$(DP)/PostsToThreads$F: $(DP)/QPosts$F
	# PostsToThreads table: noheader[PostId Qid Year], sorted lexicographically by PostId (for joining with Comments)

$(DP)/PostsToTitles$F: $(DP)/QPosts$F
	# PostsToTitles table: noheader[PostId Year Title], sorted lexicographically by PostId (for joining with Related and Formulas)

$(DP)/QPosts$F: $(POSTS) collections.sed posts.awk fields.awk | $(DP)
	gunzip -c $(POSTS) | $(SED) "s/\" *\/>$$/&\r/" | tr "\012\015" " \012" \
		| $(SED) -f collections.sed | awk -f <( cat fields.awk posts.awk ) |  sort -t '	' -k 2,2n -k 1,1n | gzip -c >$(DP)/QPosts$F
	join -t '	' -o 1.1,2.2,1.2,1.3 APosts PostsToTitles | sort -t '	' -k 2,2n -k 1,1n -k3,3n | cat <( echo "Qid	Year	Aid	Body" ) - | gzip -c >$(DP)/APosts$F
	join -t '	' -1 2 -o 1.1,1.2,2.2 PostsToThreads PostsToTitles | sort -t '	' -k 1,1 | gzip -c >$(DP)/PostsToThreads$F
	cat PostsToTitles | gzip -c >$(DP)/PostsToTitles$F
	rm APosts PostsToTitles PostsToThreads
	# QPosts table: Qid Year Title Body, sorted numerically by Year, Qid

$(DP)/Comments$F: $(COMMENTS) $(OLDCOMMENTS) collections.sed comments.awk fields.awk $(DP)/PostsToThreads$F
	gunzip -c $(OLDCOMMENTS) | grep -v "CreationDate=" | cat - <( gunzip -c $(COMMENTS) ) \
		| $(SED) "s/\" *\/>$$/&\r/" | tr "\012\015" " \012" \
		| $(SED) -f collections.sed | awk -f <( cat fields.awk comments.awk ) > Comments
	gunzip -c $(DP)/PostsToThreads$F | join -t '	' - Comments \
		| sort -t '	' -k 3,3n -k 2,2n -k 1,1n -k 4,4n | cat <( echo "PostId	Qid	Year	CommentId	Text" ) - | gzip -c >$(DP)/Comments$F
	rm Comments
	# Comments table: PostId Qid Year CommentId Text, sorted numerically by Year, Qid, PostId, CommentId

$(DP)/Related$F: $(LINKS) collections.sed related.awk fields.awk $(DP)/PostsToTitles$F
	gunzip -c $(LINKS) \
		| $(SED) -f collections.sed | sort -t '	' -k3,3 -k4,4 -k5,5r | awk -f <(cat fields.awk related.awk ) \
		| join -t '	' -1 2 -o 1.1,1.2,1.3,2.3 - <(gunzip -c $(DP)/PostsToTitles$F) \
		| sort -t '	' -k 1,1 \
		| join -t '	' -o 1.1,2.2,1.2,1.3,1.4 - <(gunzip -c $(DP)/PostsToTitles$F) \
		| sort -t '	' -k 2,2n -k 1,1n -k 4,4n | cat <( echo "Qid	Year	PostId	LinkType	Title") - | gzip -c >$(DP)/Related$F
	# Related table: Qid Year PostId LinkType Title, sorted numerically by Year, Qid, LinkType, 

# ------------------ CORPUS  ------------------
$(DP)/task1_$(CY)_corpus_2010.xml.gz: generate_corpus.py $(DP)/QPosts$F $(DP)/Comments$F $(DP)/Related$F $(DP)/AN template_minimal_v3.html
	#cat $(DP)/trial | python generate_corpus.py -i $(DP) -A APosts -C Comments -R Related -S -O -o $(DP) -y $(CY)
	gunzip -c $(DP)/QPosts$F | python generate_corpus.py -i $(DP) -A APosts -C Comments -R Related -S -O -y $(CY) -o $(DP)
	#gunzip -c $(DP)/QPosts$F | grep "^[^	]*	\(Year\|2015\)	" | python generate_corpus.py -i $(DP) -A APosts -C Comments -R Related -S -O -y $(CY) -o $(DP)

$(DP)/task2_$(CY)_data.xml.gz:  $(DP)/slts$F task2_corpus.awk
	cat $(DP)/slts$F | gunzip -c | awk -f task2_corpus.awk | gzip > $(DP)/task2_$(CY)_data.xml.gz

corpus-task1: $(DP)/task1_$(CY)_corpus_2010.xml.gz

corpus-task2: $(DP)/task2_$(CY)_data.xml.gz

corpus: corpus-task1 corpus-task2
