# makefile to create the corpus of HTML documents to be indexed

all_corpus: corpus

include makefile.base

CY = 2024

R = representation_v3
FORMULAS = $(DO)
SLTS = $(FORMULAS)/slt_$(R)
LATEX = $(FORMULAS)/latex_$(R)
OPTS = $(FORMULAS)/opt_$(R)

V = V1.3
COLLECTION = $(DO)
POSTS = $(COLLECTION)/Posts.$V.xml.gz
LINKS = $(COLLECTION)/PostLinks.$V.xml.gz
COMMENTS = $(COLLECTION)/Comments.$V.xml.gz
OLDCOMMENTS = $(COLLECTION)/Comments.V1.0.xml.gz

F = .tsv.gz
 
# ------------------ PREPRO ------------------
# To preserve the header and work with the rest: command | (read -r; printf "%s\n" "$REPLY"; sort)
$(DP)/l2so$F: $(DP)/slts$F
	# l2so tavle: no header[latex, slt, vid, opt], ordered by (unique) latex

$(DP)/opts$F: $(DP)/slts$F
	# opts table: id post_id thread_id type comment_id visual_id formula year, sorted numerically by year, thread_id, post_id, id


$(DP): | $(DD)
	@echo "***** creating directory $(DP)"
	mkdir $(DP)

$(DP)/slts$F: $(LATEX) $(SLTS) $(OPTS) slts.awk opts.sed latex.sed $(DP)/PostsToTitles$F | $(DP)
	# input format: id post_id thread_id type comment_id old_visual_id visual_id issue formula, sorted numerically by id
	echo "id	post_id	thread_id	type	comment_id	visual_id	formula	year" >header
	for f in $(LATEX)/*.tsv; do \
	  @echo $$(basename $$f) ; \
	  cat $$f | sed '1d;s/\r//g' | sed -f latex.sed | tr -d "\n" | tr '\a' '\n' | sort >l2s1 ; \
	  cat $(SLTS)/$$(basename $$f) \
	  	| sed '1d;s/\r//g' | awk -f slts.awk | sort | join -t '	' - l2s1 > l2s2 ; \
	  cat $(OPTS)/$$(basename $$f) \
	  	| sed '1d;s/\r//g' | sed -f opts.sed | sort | join -t '	' - l2s2 -o 1.1,1.2,1.3,1.4,1.5,2.8,2.7,1.7,1.9 | sort -t '	' -k 3,3 > l2s3 ; \
	  cat l2s3 | sed 's/^.*	\([^	]*	[^	]*	[^	]*	[^	]*\)$$/\1/' >> l2s ; \
	  gunzip -c $(DP)/PostsToTitles$F | join -t '	' -1 3 -o 1.1,1.2,1.3,1.4,1.5,1.8,1.9,2.2 l2s3 - >>opts ; \
	  sort -t '	' -k 3,3 l2s2 > l2s3 ; \
	  gunzip -c $(DP)/PostsToTitles$F | join -t '	' -1 3 -o 1.1,1.2,1.3,1.4,1.5,1.6,1.7,2.2 l2s3 - >>slts ; \
	  done
	@echo "sorting"
	sort -t '	' -k 8,8 -k 3,3n -k 2,2n -k 1,1n <slts | cat header - | gzip -c >$(DP)/slts$F
	sort -t '	' -k 8,8 -k 3,3n -k 2,2n -k 1,1n <opts | cat header - | gzip -c >$(DP)/opts$F
	sort -u -t "	" <l2s | grep "[^	]*[a-zA-Z] | gzip -c >$(DP)/l2so$F
	rm l2s l2s1 l2s2 l2s3 slts opts header
	# slts table: id post_id thread_id type comment_id visual_id formula year, sorted numerically by year, thread_id, post_id, id

$(DP)/APosts$F: $(DP)/QPosts$F
	# APosts table: Qid Year Aid Body, sorted numerically by Year, Qid, Aid

$(DP)/PostsToThreads$F: $(DP)/QPosts$F
	# PostsToThreads table: noheader[PostId Qid Year], sorted lexicographically by PostId (for joining with Comments)

$(DP)/PostsToTitles$F: $(DP)/QPosts$F
	# PostsToTitles table: noheader[PostId Year Title], sorted lexicographically by PostId (for joining with Related and Formulas)

$(DP)/QPosts$F: $(POSTS) collections.sed posts.awk fields.awk | $(DP)
	gunzip -c $(POSTS) | sed "s/\" *\/>$$/&\r/" | tr "\012\015" " \012" \
		| sed -f collections.sed | awk -f <( cat fields.awk posts.awk ) |  sort -t '	' -k 2,2n -k 1,1n | gzip -c >$(DP)/QPosts$F
	join -t '	' -o 1.1,2.2,1.2,1.3 APosts PostsToTitles | sort -t '	' -k 2,2n -k 1,1n -k3,3n | cat <( echo "Qid	Year	Aid	Body" ) - | gzip -c >$(DP)/APosts$F
	join -t '	' -1 2 -o 1.1,1.2,2.2 PostsToThreads PostsToTitles | sort -t '	' -k 1,1 | gzip -c >$(DP)/PostsToThreads$F
	cat PostsToTitles | gzip -c >$(DP)/PostsToTitles$F
	rm APosts PostsToTitles PostsToThreads
	# QPosts table: Qid Year Title Body, sorted numerically by Year, Qid

$(DP)/Comments$F: $(COMMENTS) $(OLDCOMMENTS) collections.sed comments.awk fields.awk $(DP)/PostsToThreads$F
	gunzip -c $(OLDCOMMENTS) | grep -v "CreationDate=" | cat - <( gunzip -c $(COMMENTS) ) \
		| sed "s/\" *\/>$$/&\r/" | tr "\012\015" " \012" \
		| sed -f collections.sed | awk -f <( cat fields.awk comments.awk ) > Comments
	gunzip -c $(DP)/PostsToThreads$F | join -t '	' - Comments \
		| sort -t '	' -k 3,3n -k 2,2n -k 1,1n -k 4,4n | cat <( echo "PostId	Qid	Year	CommentId	Text" ) - | gzip -c >$(DP)/Comments$F
	rm Comments
	# Comments table: PostId Qid Year CommentId Text, sorted numerically by Year, Qid, PostId, CommentId

$(DP)/Related$F: $(LINKS) collections.sed related.awk fields.awk $(DP)/slts$F  titles.awk $(DP)/PostsToTitles$F
	gunzip -c $(DP)/slts$F | grep -h "	title	"  > pmml
	gunzip -c $(DP)/opts$F | grep -h "	title	"  > cmml
	gunzip -c $(DP)/PostsToTitles$F >PostsToTitles
	gunzip -c $(LINKS) \
		| sed -f collections.sed | sort -t '	' -k3,3 -k4,4 -k5,5r | awk -f <(cat fields.awk related.awk ) \
		| join -t '	' -1 2 -o 1.1,1.2,1.3,2.3 - PostsToTitles \
		| sort -t '	' -k 1,1 \
		| join -t '	' -o 1.1,2.2,1.2,1.3,1.4 - PostsToTitles \
		| awk -f titles.awk | sort -t '	' -k 2,2n -k 1,1n -k 4,4n | cat <( echo "Qid	Year	PostId	LinkType	Title") - | gzip -c >$(DP)/Related$F
	rm PostsToTitles pmml cmml
	# Related table: Qid Year PostId LinkType Title, sorted numerically by Year, Qid, LinkType, 

# ------------------ CORPUS  ------------------
$(DP)/task1_$(CY)_corpus_2010.xml.gz: generate_corpus.py $(DP)/QPosts$F $(DP)/Comments$F $(DP)/Related$F template_minimal_v3.html
	#cat $(DP)/trial | python3 generate_corpus.py -i $(DP) -A APosts -C Comments -R Related -S slts -L l2so -o $(DP)
	gunzip -c $(DP)/QPosts$F | python3 generate_corpus.py -i $(DP) -A APosts -C Comments -R Related -S slts -L l2so -o $(DP)
	#gunzip -c $(DP)/QPosts$F | grep "^[^	]*	\(Year\|2015\)	" | python3 generate_corpus.py -i $(DP) -A APosts -C Comments -R Related -S slts -L l2so -o $(DP)
	#gunzip -c $(DP)/QPosts$F | python3 generate_corpus.py -i $(DP) -A APosts -C Comments -R Related -S slts -O opts -L l2so -o $(DP)

$(DP)/task2_$(CY)_data.xml.gz:  $(DP)/slts$F task2_corpus.awk
	cat $(DP)/slts$F | gunzip -c | awk -f task2_corpus.awk | gzip > $(DP)/task2_$(CY)_data.xml.gz

corpus-task1: $(DP)/task1_$(CY)_corpus_2010.xml.gz

corpus-task2: $(DP)/task2_$(CY)_data.xml.gz

corpus: corpus-task1 corpus-task2

